openapi: 3.0.2
info:
  version: '1.0.0'

  title: Images storage

  termsOfService: 'https://coffeecompass.cz/terms'
  contact:
    email: vaclavek.michal@gmail.com
    url: 'https://www.coffeecompass.cz/contactMe'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

  description: |
    This is an image files storage API
    # Introduction
    It is intended to save and retrieve image files related to given object specified by object ID

    The image is identified by its related object ID and by ID of the image itself. More image files can be assigned to
    object. All image files are saved in its original size, in HD size (1920x1080), in 50% size (called Thumbnail large),
    in 25% size (called Thumbnail mid) and in 12.5% size (called Thumbnail small)

servers:
  - url: 'https://coffeecompass.cz/api/v1'

# Holds the relative paths to the individual endpoints. The path is appended to the
# basePath in order to construct the full URL.
paths:
  '/image/upload':

    post:
      summary: Upload image file

      description: |
        Upload image related to object

      operationId: uploadImage

      requestBody:
        content:
          multipart/form-data: # Media type
            schema: # Request payload
              type: object
              properties:
                objectExtId:
                  type: string
                  format: uuid
                description:
                  type: string
                file: # image file
                  type: string
                  format: binary

      # security schemas applied to this operation
      security:
        - main_auth:
            - 'bearerAuth'
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema: # response schema can be specified for each response
                $ref: '#/components/schemas/ImageObject'
        '403':
          description: Forbidden


# An object to hold reusable parts that can be used across the definition
components:
  schemas:
    ImageObject:
      description: Image object - contains all uploaded images
      properties:
        externalObjectId:
          type: string
        externalObjectImages:
          type: array
          items:
            $ref: '#/components/schemas/ImageFile'
    ImageFile:
      type: object
      properties:
        extId:
          description: image external ID
          type: string
        savedOn:
          description: date/time when the image was saved
          type: string
        originalFileName:
          description: original image file name
          type: string
        fileNameHd:
          description: HD image file name
          type: string
        thumbnailSmallName:
          description: small thumbnail image file name
          type: string
        thumbnailMidName:
          description: mid thumbnail image file name
          type: string
        thumbnailLargeName:
          description: large thumbnail image file name
          type: string
        description:
          type: string
          maxLength: 128

  # Security scheme definitions that can be used across the definition.
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
    basic_auth: # security definition name (you can name it as you want)
      type: http
      scheme: basic