spring.datasource.url=jdbc:postgresql://postgres:5432/coffeecompass
spring.datasource.username=coffeecompass_dev_user
spring.datasource.password=53normaleuser_passwd.,78
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# gmail.com z dev poc.
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=vaclavek.michal
spring.mail.password=rpmkrttdynmqnjsy
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Social logins - OAuth2 pro endpoint http://localhost:8081/login/oauth2/code/google  pro development ucely pro Google
spring.security.oauth2.client.registration.google.client-id=285547376202-1rqupa4elcdgaurnksrkcabl4sakjicu.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=dGGyqwoIFbCEWMrFzKqbD9dA
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile
 
              
# Social logins - OAuth2 pro endpoint http://localhost:8081/login/oauth2/code/facebook  pro development ucely pro Facebook
spring.security.oauth2.client.registration.facebook.client-id=705822616601092
spring.security.oauth2.client.registration.facebook.client-secret=2b5922330b49af28f46491990d90953e
spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/oauth2/callback/{registrationId}

spring.security.oauth2.client.provider.facebook.authorizationUri=https://www.facebook.com/v3.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.tokenUri=https://graph.facebook.com/v3.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

app.oauth2.authorizationRequestBaseUri=/oauth2/authorize
# After successfully authenticating with the OAuth2 Provider,
# we'll be generating an auth token for the user and sending the token to the
# redirectUri mentioned by the frontend client in the /oauth2/authorize request.
# We're not using cookies because they won't work well in mobile clients.
app.oauth2.authorizedRedirectUris=http://localhost:8080/oauth2/loginSuccess,myandroidapp://oauth2/redirect
app.oauth2.defaultSuccessLoginRedirectURI=http://localhost:8080/oauth2/loginSuccess
app.oauth2.defaultErrorLoginRedirectURI=http://localhost:8080/oauth2/loginError


app.jwtauth.tokenSecret=jwtsecrettoencode
# 10 years (24*3600*365.25*10 ms)- to be modified to 2 hours (7200), once the refresh token functionality is introduced
app.jwtauth.tokenexpirationsec=315576000
app.jwtauth.clock-skew-sec=300
app.jwtauth.issuer=fungisoft